{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  order: [],\n  product: [],\n  isAlertPopup: false,\n  isOrderDetailsToggle: false,\n  toggleOrderId: 0\n};\nexport const dataSlice = createSlice({\n  name: 'Data',\n  initialState,\n  reducers: {\n    setOrder: (state, action) => {\n      state.order = action.payload;\n    },\n    setProduct: (state, action) => {\n      state.product = action.payload;\n    },\n    deleteStoreOrder: (state, action) => {\n      state.order = state.order.filter(order => order.id !== action.payload);\n    },\n    deleteStoreProduct: (state, action) => {\n      state.product = state.product.filter(product => product.id !== action.payload);\n    },\n    deleteProductFromOrder: (state, action) => {\n      const order = state.order.find(order => order.id === action.payload.orderId);\n      if (order) {\n        order.products = order.products.filter(product => product.id !== action.payload.productId);\n      }\n    },\n    openAlertPopup: state => {\n      state.isAlertPopup = true;\n    },\n    closeAlertPopup: state => {\n      state.isAlertPopup = false;\n    },\n    toggleOrdersDetails: (state, action) => {\n      if (action.payload && state.toggleOrderId !== action.payload) {\n        state.isOrderDetailsToggle = true;\n        state.toggleOrderId = action.payload;\n      } else {\n        state.isOrderDetailsToggle = false;\n        state.toggleOrderId = 0;\n      }\n    }\n  }\n});\nexport const {\n  setOrder,\n  setProduct,\n  deleteStoreOrder,\n  deleteStoreProduct,\n  deleteProductFromOrder,\n  openAlertPopup,\n  closeAlertPopup,\n  toggleOrdersDetails\n} = dataSlice.actions;\nexport default dataSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","order","product","isAlertPopup","isOrderDetailsToggle","toggleOrderId","dataSlice","name","reducers","setOrder","state","action","payload","setProduct","deleteStoreOrder","filter","id","deleteStoreProduct","deleteProductFromOrder","find","orderId","products","productId","openAlertPopup","closeAlertPopup","toggleOrdersDetails","actions","reducer"],"sources":["D:/work/test-assignment/client/src/features/MainSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Order, Product, DataState } from '../types/Types';\r\n\r\n\r\nconst initialState: DataState = {\r\n  order: [],\r\n  product: [],\r\n  isAlertPopup: false,\r\n  isOrderDetailsToggle: false,\r\n  toggleOrderId: 0,\r\n};\r\n\r\nexport const dataSlice = createSlice({\r\n  name: 'Data',\r\n  initialState,\r\n  reducers: {\r\n    setOrder: (state, action: PayloadAction<Order[]>) => {\r\n      state.order = action.payload;\r\n    },\r\n    setProduct: (state, action: PayloadAction<Product[]>) => {\r\n      state.product = action.payload;\r\n    },\r\n    deleteStoreOrder: (state, action: PayloadAction<number | null>) => {\r\n      state.order = state.order.filter((order) => order.id !== action.payload);\r\n    },\r\n    deleteStoreProduct: (state, action: PayloadAction<number | null>) => {\r\n      state.product = state.product.filter((product) => product.id !== action.payload);\r\n    },\r\n    deleteProductFromOrder: (state, action: PayloadAction<{ orderId: number | null; productId: number | null }>) => {\r\n      const order = state.order.find(order => order.id === action.payload.orderId);\r\n      if (order) {\r\n        order.products = order.products.filter(product => product.id !== action.payload.productId);\r\n      }\r\n    },\r\n    \r\n    openAlertPopup: (state) => {\r\n      state.isAlertPopup = true;\r\n    },\r\n    closeAlertPopup: (state) => {\r\n      state.isAlertPopup = false;\r\n    },\r\n    toggleOrdersDetails: (state, action: PayloadAction<number | null>) => {\r\n      if (action.payload && state.toggleOrderId !== action.payload) {\r\n        state.isOrderDetailsToggle = true;\r\n        state.toggleOrderId = action.payload;\r\n      } else {\r\n        state.isOrderDetailsToggle = false;\r\n        state.toggleOrderId = 0;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setOrder,\r\n  setProduct,\r\n  deleteStoreOrder,\r\n  deleteStoreProduct,\r\n  deleteProductFromOrder,\r\n  openAlertPopup,\r\n  closeAlertPopup,\r\n  toggleOrdersDetails,\r\n} = dataSlice.actions;\r\n\r\nexport default dataSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAI7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,YAAY,EAAE,KAAK;EACnBC,oBAAoB,EAAE,KAAK;EAC3BC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;EACnCQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACnDD,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAgC,KAAK;MACvDD,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChC,CAAC;IACDE,gBAAgB,EAAEA,CAACJ,KAAK,EAAEC,MAAoC,KAAK;MACjED,KAAK,CAACT,KAAK,GAAGS,KAAK,CAACT,KAAK,CAACc,MAAM,CAAEd,KAAK,IAAKA,KAAK,CAACe,EAAE,KAAKL,MAAM,CAACC,OAAO,CAAC;IAC1E,CAAC;IACDK,kBAAkB,EAAEA,CAACP,KAAK,EAAEC,MAAoC,KAAK;MACnED,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,CAACa,MAAM,CAAEb,OAAO,IAAKA,OAAO,CAACc,EAAE,KAAKL,MAAM,CAACC,OAAO,CAAC;IAClF,CAAC;IACDM,sBAAsB,EAAEA,CAACR,KAAK,EAAEC,MAA2E,KAAK;MAC9G,MAAMV,KAAK,GAAGS,KAAK,CAACT,KAAK,CAACkB,IAAI,CAAClB,KAAK,IAAIA,KAAK,CAACe,EAAE,KAAKL,MAAM,CAACC,OAAO,CAACQ,OAAO,CAAC;MAC5E,IAAInB,KAAK,EAAE;QACTA,KAAK,CAACoB,QAAQ,GAAGpB,KAAK,CAACoB,QAAQ,CAACN,MAAM,CAACb,OAAO,IAAIA,OAAO,CAACc,EAAE,KAAKL,MAAM,CAACC,OAAO,CAACU,SAAS,CAAC;MAC5F;IACF,CAAC;IAEDC,cAAc,EAAGb,KAAK,IAAK;MACzBA,KAAK,CAACP,YAAY,GAAG,IAAI;IAC3B,CAAC;IACDqB,eAAe,EAAGd,KAAK,IAAK;MAC1BA,KAAK,CAACP,YAAY,GAAG,KAAK;IAC5B,CAAC;IACDsB,mBAAmB,EAAEA,CAACf,KAAK,EAAEC,MAAoC,KAAK;MACpE,IAAIA,MAAM,CAACC,OAAO,IAAIF,KAAK,CAACL,aAAa,KAAKM,MAAM,CAACC,OAAO,EAAE;QAC5DF,KAAK,CAACN,oBAAoB,GAAG,IAAI;QACjCM,KAAK,CAACL,aAAa,GAAGM,MAAM,CAACC,OAAO;MACtC,CAAC,MAAM;QACLF,KAAK,CAACN,oBAAoB,GAAG,KAAK;QAClCM,KAAK,CAACL,aAAa,GAAG,CAAC;MACzB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXI,QAAQ;EACRI,UAAU;EACVC,gBAAgB;EAChBG,kBAAkB;EAClBC,sBAAsB;EACtBK,cAAc;EACdC,eAAe;EACfC;AACF,CAAC,GAAGnB,SAAS,CAACoB,OAAO;AAErB,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}