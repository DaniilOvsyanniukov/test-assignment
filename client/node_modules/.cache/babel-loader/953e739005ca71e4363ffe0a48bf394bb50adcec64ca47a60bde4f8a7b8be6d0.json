{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setProduct } from '../features/MainSlice';\nfunction useProducts() {\n  _s();\n  const dispatch = useDispatch();\n  const products = useSelector(state => state.datastore.product);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_SERVER_URL + '/api/products').then(response => {\n      dispatch(setProduct(response.data));\n    }).catch(error => {\n      console.log('Ошибка при получении данных с сервера:', error);\n    });\n  }, [dispatch]);\n  const filteredProducts = filter ? products.filter(product => product.type === filter) : products;\n  return {\n    products: filteredProducts,\n    filter,\n    setFilter\n  };\n}\n_s(useProducts, \"oRd/eNBfok06QxjBUyYOf8wvMXs=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport default useProducts;","map":{"version":3,"names":["useState","useEffect","axios","useDispatch","useSelector","setProduct","useProducts","_s","dispatch","products","state","datastore","product","filter","setFilter","get","process","env","REACT_APP_SERVER_URL","then","response","data","catch","error","console","log","filteredProducts","type"],"sources":["D:/work/test-assignment/client/src/hooks/UseProducts.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setProduct } from '../features/MainSlice';\r\nimport { Product } from '../types/Types';\r\nimport { RootState } from '../app/Store';\r\n\r\nfunction useProducts() {\r\n  const dispatch = useDispatch();\r\n  const products: Product[] = useSelector((state: RootState) => state.datastore.product);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get(process.env.REACT_APP_SERVER_URL + '/api/products')\r\n      .then((response) => {\r\n        dispatch(setProduct(response.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log('Ошибка при получении данных с сервера:', error);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const filteredProducts = filter ? products.filter((product) => product.type === filter) : products;\r\n\r\n  return {\r\n    products: filteredProducts,\r\n    filter,\r\n    setFilter\r\n  };\r\n}\r\n\r\nexport default useProducts;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,uBAAuB;AAIlD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAmB,GAAGL,WAAW,CAAEM,KAAgB,IAAKA,KAAK,CAACC,SAAS,CAACC,OAAO,CAAC;EACtF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACa,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAG,eAAe,CAAC,CAC1DC,IAAI,CAAEC,QAAQ,IAAK;MAClBZ,QAAQ,CAACH,UAAU,CAACe,QAAQ,CAACC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,KAAK,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,MAAMkB,gBAAgB,GAAGb,MAAM,GAAGJ,QAAQ,CAACI,MAAM,CAAED,OAAO,IAAKA,OAAO,CAACe,IAAI,KAAKd,MAAM,CAAC,GAAGJ,QAAQ;EAElG,OAAO;IACLA,QAAQ,EAAEiB,gBAAgB;IAC1Bb,MAAM;IACNC;EACF,CAAC;AACH;AAACP,EAAA,CAtBQD,WAAW;EAAA,QACDH,WAAW,EACAC,WAAW;AAAA;AAsBzC,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}